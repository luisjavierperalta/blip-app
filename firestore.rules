   rules_version = '2';
   service cloud.firestore {
     match /databases/{database}/documents {
       // Helper functions
       function isAuthenticated() {
         return request.auth != null;
       }
       
       function isOwner(userId) {
         return isAuthenticated() && request.auth.uid == userId;
       }
       
       function isVerified() {
         return isAuthenticated() && 
           get(/databases/$(database)/documents/users/$(request.auth.uid)).data.verified == true;
       }

       // Users collection
       match /users/{userId} {
         allow read: if isAuthenticated();
         allow create: if isAuthenticated() && request.auth.uid == userId;
         allow update: if isOwner(userId);
         allow delete: if isOwner(userId);
       }

       // Matches collection
       match /matches/{matchId} {
         allow read: if isAuthenticated() && 
           (request.auth.uid in resource.data.users);
         allow create: if isVerified();
         allow update: if isAuthenticated() && 
           (request.auth.uid in resource.data.users);
         allow delete: if isAuthenticated() && 
           (request.auth.uid in resource.data.users);
       }
     }
   }